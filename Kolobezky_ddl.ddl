-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-12-30 17:58:18 SEÈ
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adresy (
    id_adresy     INTEGER NOT NULL,
    cislo_popisne INTEGER NOT NULL,
    ulice         VARCHAR2(20) NOT NULL,
    mesto         VARCHAR2(40) NOT NULL,
    psc           INTEGER NOT NULL,
    stat          VARCHAR2(40) NOT NULL
);

COMMENT ON COLUMN adresy.id_adresy IS
    'primární klíè id adresy osoby';

COMMENT ON COLUMN adresy.cislo_popisne IS
    'èíslo popisné osoby';

COMMENT ON COLUMN adresy.ulice IS
    'ulice osoby';

COMMENT ON COLUMN adresy.mesto IS
    'mìsto, kde bydlí osoba';

COMMENT ON COLUMN adresy.psc IS
    'poštovní smìrovací èislo osoby';

COMMENT ON COLUMN adresy.stat IS
    'stát, kde osoba bydlí';

CREATE INDEX adresy__idx ON
    adresy (
        id_adresy
    ASC );

ALTER TABLE adresy ADD CONSTRAINT adresa_pk PRIMARY KEY ( id_adresy );

CREATE TABLE osoby (
    id_osoba        INTEGER NOT NULL,
    jmeno           VARCHAR2(20) NOT NULL,
    prijmeni        VARCHAR2(20) NOT NULL,
    datum_narozeni  DATE NOT NULL,
    telefonni_cislo VARCHAR2(64),
    typ_osoby       CHAR(1) NOT NULL,
    vek             INTEGER NOT NULL
);

ALTER TABLE osoby
    ADD CHECK ( typ_osoby IN ( 'P', 'Z' ) );

COMMENT ON COLUMN osoby.id_osoba IS
    'Primární klíè osoby';

COMMENT ON COLUMN osoby.jmeno IS
    'jméno osoby';

COMMENT ON COLUMN osoby.prijmeni IS
    'pøíjmeni osoby';

COMMENT ON COLUMN osoby.datum_narozeni IS
    'datum narození osoby';

COMMENT ON COLUMN osoby.telefonni_cislo IS
    'telefonní èíslo osoby';

COMMENT ON COLUMN osoby.typ_osoby IS
    'tento atribut urèuje typ osoby';

COMMENT ON COLUMN osoby.vek IS
    'atribut vìk osoby';

ALTER TABLE osoby ADD CONSTRAINT osoba_pk PRIMARY KEY ( id_osoba );

CREATE TABLE poradatele (
    id_osoba INTEGER NOT NULL,
    pozice   VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN poradatele.id_osoba IS
    'primární klíè id poøadatele
a zároveò cizí klíè z tabulky osoby';

COMMENT ON COLUMN poradatele.pozice IS
    'pozice ve které poøadatel pracuje';

ALTER TABLE poradatele ADD CONSTRAINT poradatel_pk PRIMARY KEY ( id_osoba );

CREATE TABLE "PORADATEL-ZAVOD" (
    poradatel_id_osoba INTEGER NOT NULL,
    zavod_id_zavod     INTEGER NOT NULL
);

ALTER TABLE "PORADATEL-ZAVOD" ADD CONSTRAINT "PORADATEL-ZAVOD_PK" PRIMARY KEY ( poradatel_id_osoba,
                                                                                zavod_id_zavod );

CREATE TABLE registrace_zavodu (
    id_registrace        INTEGER NOT NULL,
    startovni_cislo      INTEGER NOT NULL,
    cas                  VARCHAR2(20) NOT NULL,
    cas_v_cili           VARCHAR2(20) NOT NULL,
    typ_kat_id_kategorie INTEGER NOT NULL,
    osoba_id_osoba       INTEGER NOT NULL,
    zavod_id_zavod       INTEGER NOT NULL
);

COMMENT ON COLUMN registrace_zavodu.id_registrace IS
    'primární klíè registrace';

COMMENT ON COLUMN registrace_zavodu.startovni_cislo IS
    'startovní èíslo registrace';

COMMENT ON COLUMN registrace_zavodu.cas IS
    'èas na zaèátku';

COMMENT ON COLUMN registrace_zavodu.cas_v_cili IS
    'èas v cíli';

COMMENT ON COLUMN registrace_zavodu.typ_kat_id_kategorie IS
    'cizí klíè z tabulky typy_kategorii';

COMMENT ON COLUMN registrace_zavodu.osoba_id_osoba IS
    'cizí klíè z tabulky osoby';

COMMENT ON COLUMN registrace_zavodu.zavod_id_zavod IS
    'cizí klíè z tabulky závody';

ALTER TABLE registrace_zavodu ADD CONSTRAINT registrace_zavodu_pk PRIMARY KEY ( id_registrace );

CREATE TABLE "TYP_KOLOBAZKY-TYP_KATEGORIE" (
    typ_kolobezky_id_typ       INTEGER NOT NULL,
    typ_kategorie_id_kategorie INTEGER NOT NULL
);

ALTER TABLE "TYP_KOLOBAZKY-TYP_KATEGORIE" ADD CONSTRAINT "TYP_KOLOBAZKY-TYP_KATEGORIE_PK" PRIMARY KEY ( typ_kolobezky_id_typ,
                                                                                                        typ_kategorie_id_kategorie );

CREATE TABLE typy_kategorii (
    id_kategorie INTEGER NOT NULL,
    nazev        VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN typy_kategorii.id_kategorie IS
    'primární klíè kategorie závodu';

COMMENT ON COLUMN typy_kategorii.nazev IS
    'název kategorie závodu';

ALTER TABLE typy_kategorii ADD CONSTRAINT typ_kategorie_pk PRIMARY KEY ( id_kategorie );

CREATE TABLE typy_kolobezek (
    id_typ       INTEGER NOT NULL,
    nazev        VARCHAR2(20) NOT NULL,
    max_rychlost INTEGER NOT NULL,
    brzdy        VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN typy_kolobezek.id_typ IS
    'primární klíè typy_kolobezek';

COMMENT ON COLUMN typy_kolobezek.nazev IS
    'název typu kolobìžky';

COMMENT ON COLUMN typy_kolobezek.max_rychlost IS
    'maximáolní rychlost kolobìžky';

COMMENT ON COLUMN typy_kolobezek.brzdy IS
    'typ brzdy kolobìžky';

ALTER TABLE typy_kolobezek ADD CONSTRAINT typ_kolobezky_pk PRIMARY KEY ( id_typ );

CREATE TABLE typy_zavodu (
    id_zavodu INTEGER NOT NULL,
    nazev     VARCHAR2(20) NOT NULL,
    odmena    INTEGER NOT NULL
);

COMMENT ON COLUMN typy_zavodu.id_zavodu IS
    'primární klíè závodu';

COMMENT ON COLUMN typy_zavodu.nazev IS
    'název závodu';

COMMENT ON COLUMN typy_zavodu.odmena IS
    'odmìna za závod';

ALTER TABLE typy_zavodu ADD CONSTRAINT typ_zavodu_pk PRIMARY KEY ( id_zavodu );

CREATE TABLE vysledky (
    poradi                VARCHAR2(20) NOT NULL,
    zavod_id_zavod        INTEGER NOT NULL,
    reg_zav_id_registrace INTEGER NOT NULL,
    cena                  NUMBER NOT NULL
);

COMMENT ON COLUMN vysledky.poradi IS
    'poøadí závodníkù';

COMMENT ON COLUMN vysledky.zavod_id_zavod IS
    'cizí klíè z tabulky zavody';

COMMENT ON COLUMN vysledky.reg_zav_id_registrace IS
    'cizí klíè z tabulky registrace_zavodu';

COMMENT ON COLUMN vysledky.cena IS
    'cena/odmìna za urèité umístìní v závodu';

CREATE TABLE zavodnici (
    id_osoba         INTEGER NOT NULL,
    uroven           VARCHAR2(20) NOT NULL,
    adresa_id_adresy INTEGER NOT NULL,
    startovni_cislo  INTEGER NOT NULL,
    pohlavi          VARCHAR2(20)
);

COMMENT ON COLUMN zavodnici.id_osoba IS
    'primární klíè závodníka
zároveò to je cizí klíè z tabulky osoby';

COMMENT ON COLUMN zavodnici.uroven IS
    'úroveò závodníka';

COMMENT ON COLUMN zavodnici.adresa_id_adresy IS
    'id adresy závodníka
zároveò cizí klíè adresy z tabulky adresy';

COMMENT ON COLUMN zavodnici.startovni_cislo IS
    'startovní èíslo závodníka';

COMMENT ON COLUMN zavodnici.pohlavi IS
    'volitelný atribut pohlaví závodníka';

CREATE INDEX zavodnici__idx ON
    zavodnici (
        id_osoba
    ASC );

ALTER TABLE zavodnici ADD CONSTRAINT zavodnik_pk PRIMARY KEY ( id_osoba );

CREATE TABLE zavody (
    id_zavod             INTEGER NOT NULL,
    nazev                VARCHAR2(40) NOT NULL,
    datum                DATE NOT NULL,
    delka                INTEGER NOT NULL,
    adresa_id_adresy     INTEGER NOT NULL,
    typ_zavodu_id_zavodu INTEGER NOT NULL,
    misto                VARCHAR2(60) NOT NULL
);

COMMENT ON COLUMN zavody.id_zavod IS
    'Primární klíè id závodu';

COMMENT ON COLUMN zavody.nazev IS
    'název daného závodu';

COMMENT ON COLUMN zavody.datum IS
    'datum konání závodu';

COMMENT ON COLUMN zavody.delka IS
    'jak dlouhý je závod';

COMMENT ON COLUMN zavody.adresa_id_adresy IS
    'cizí klíè z adresy';

COMMENT ON COLUMN zavody.typ_zavodu_id_zavodu IS
    'cizí klíè z tabulky typy_zavodu';

COMMENT ON COLUMN zavody.misto IS
    'místo konání závodu';

ALTER TABLE zavody ADD CONSTRAINT zavod_pk PRIMARY KEY ( id_zavod );

ALTER TABLE poradatele
    ADD CONSTRAINT poradatel_osoba_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE "PORADATEL-ZAVOD"
    ADD CONSTRAINT "PORADATEL-ZAVOD_PORADATEL_FK" FOREIGN KEY ( poradatel_id_osoba )
        REFERENCES poradatele ( id_osoba );

ALTER TABLE "PORADATEL-ZAVOD"
    ADD CONSTRAINT "PORADATEL-ZAVOD_ZAVOD_FK" FOREIGN KEY ( zavod_id_zavod )
        REFERENCES zavody ( id_zavod );

ALTER TABLE registrace_zavodu
    ADD CONSTRAINT reg_zav_typ_kategorie_fk FOREIGN KEY ( typ_kat_id_kategorie )
        REFERENCES typy_kategorii ( id_kategorie );

ALTER TABLE registrace_zavodu
    ADD CONSTRAINT registrace_zavodu_osoba_fk FOREIGN KEY ( osoba_id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE registrace_zavodu
    ADD CONSTRAINT registrace_zavodu_zavod_fk FOREIGN KEY ( zavod_id_zavod )
        REFERENCES zavody ( id_zavod );

ALTER TABLE "TYP_KOLOBAZKY-TYP_KATEGORIE"
    ADD CONSTRAINT "TK-TYP_KATEGORIE_TK_FK" FOREIGN KEY ( typ_kategorie_id_kategorie )
        REFERENCES typy_kategorii ( id_kategorie );

ALTER TABLE "TYP_KOLOBAZKY-TYP_KATEGORIE"
    ADD CONSTRAINT "TK-TYP_KATEGORIE_TK_FKv2" FOREIGN KEY ( typ_kolobezky_id_typ )
        REFERENCES typy_kolobezek ( id_typ );

ALTER TABLE vysledky
    ADD CONSTRAINT vysledek_registrace_zavodu_fk FOREIGN KEY ( reg_zav_id_registrace )
        REFERENCES registrace_zavodu ( id_registrace );

ALTER TABLE vysledky
    ADD CONSTRAINT vysledek_zavod_fk FOREIGN KEY ( zavod_id_zavod )
        REFERENCES zavody ( id_zavod );

ALTER TABLE zavody
    ADD CONSTRAINT zavod_adresa_fk FOREIGN KEY ( adresa_id_adresy )
        REFERENCES adresy ( id_adresy );

ALTER TABLE zavody
    ADD CONSTRAINT zavod_typ_zavodu_fk FOREIGN KEY ( typ_zavodu_id_zavodu )
        REFERENCES typy_zavodu ( id_zavodu );

ALTER TABLE zavodnici
    ADD CONSTRAINT zavodnik_adresa_fk FOREIGN KEY ( adresa_id_adresy )
        REFERENCES adresy ( id_adresy );

ALTER TABLE zavodnici
    ADD CONSTRAINT zavodnik_osoba_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

CREATE OR REPLACE TRIGGER arc_fkarc_1_poradatele BEFORE
    INSERT OR UPDATE OF id_osoba ON poradatele
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.typ_osoby
    INTO d
    FROM
        osoby a
    WHERE
        a.id_osoba = :new.id_osoba;

    IF ( d IS NULL OR d <> 'P' ) THEN
        raise_application_error(-20223, 'FK PORADATEL_OSOBA_FK in Table PORADATELE violates Arc constraint on Table OSOBY - discriminator column typ_osoby doesn''t have value ''P'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_zavodnici BEFORE
    INSERT OR UPDATE OF id_osoba ON zavodnici
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.typ_osoby
    INTO d
    FROM
        osoby a
    WHERE
        a.id_osoba = :new.id_osoba;

    IF ( d IS NULL OR d <> 'Z' ) THEN
        raise_application_error(-20223, 'FK ZAVODNIK_OSOBA_FK in Table ZAVODNICI violates Arc constraint on Table OSOBY - discriminator column typ_osoby doesn''t have value ''Z'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             2
-- ALTER TABLE                             26
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
